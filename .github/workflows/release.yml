name: release

on:
  release:
    types:
      - published

env:
  IMAGE_NAME: optical-number-recognition

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3.1.0
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Run tests
        env:
          CI_VERSION: ${{ github.ref }}
        run: sbt "; test; assembly"

      - name: Build image
        run: docker build . --file Dockerfile --tag "$IMAGE_NAME" --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID="ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME"
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo "$IMAGE_ID" | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9] ]] && VERSION=$(echo "$VERSION" | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:$VERSION"
          docker push "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:latest"
          docker push "$IMAGE_ID:latest"